To simulate a flight on the deployment board there are multiple ways to go about it.

A complex and innefficient way is to read raw altitude data from the SD card every time 
the altitude value is needed during the test. As Arduino only suports one file openned at a 
time and SD card read/write operations are slow, this method is slow and complex to implement. Also, the SD library functions are not suited to lookup a certain data in a huge csv file, so
this method is also complex to implement.

A more simple yet less accurate method is to use mathematical functions that replicate the 
altitude recorded on a previous flight. This is faster since math is faster to execute than 
memory access operations. First we need to find the functions that represent our altitude 
data as a function of time. Using Python, we are able to compute the following functions
for each step of the flight:


Équation launchpad:
 4.24130141489228e-5*t + 1.40090814584814
 
Équation burnout:
 3.4932435120246e-22*t**6 - 6.0137525133258e-17*t**5 + 4.27325583289267e-12*t**4 - 1.60300051943013e-7*t**3 + 0.00333952376594387*t**2 - 36.3492749029025*t + 160449.656477025
 
Équation predrogue:
 -1.49350189856461e-14*t**4 + 2.19414872603138e-9*t**3 - 0.000125097528935285*t**2 + 3.29683601045748*t - 31354.7202506453
 
Équation premain:
 2.172653597427e-8*t**2 - 0.0282022850738493*t + 3697.35684913407
 
Équation drift:
 -9.91894988952945e-13*t**3 + 4.97807830666201e-7*t**2 - 0.0906045209884312*t + 5961.90970204993
